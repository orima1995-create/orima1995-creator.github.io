name: Post from Issue
on:
  issues:
    types: [opened, edited]

permissions:
  contents: write
  issues: read

jobs:
  build-post:
    if: |
      github.event.issue.state == 'open' &&
      contains(join(github.event.issue.labels.*.name, ','), 'post')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate post (shop-style)
        env:
          TITLE:  ${{ github.event.issue.title }}
          BODY:   ${{ github.event.issue.body }}
          AUTHOR: ${{ github.event.issue.user.login }}
        run: |
          set -euo pipefail

          get_field () {
            awk -v key="$1" '
              $0 ~ "^"key"$" {getline; print; exit}
            ' <<<"$BODY" | sed 's/\r$//'
          }
          get_block () {
            awk -v key="$1" '
              $0 ~ "^"key"$" {flag=1; next}
              flag && NF {print; next}
              flag && !NF {exit}
            ' <<<"$BODY" | sed 's/\r$//'
          }

          BRAND=$(get_field "ブランド")
          MODEL=$(get_field "モデル名")
          CALIBER=$(get_field "キャリバー")
          WINDING=$(get_field "巻き上げ方式")
          CASE=$(get_field "ケース径（mm）" | tr -cd '0-9.')
          LUG=$(get_field "ラグ幅（mm）"  | tr -cd '0-9.')
          MATERIAL=$(get_field "素材")
          ERA=$(get_field "製造年代")
          CATCH=$(get_field "キャッチコピー（1行）")
          PRICE_REF=$(get_field "参考市場価格（任意）")
          VIDEO=$(get_field "動画URL（任意）")
          OWNER=$(get_field "展示者（任意）")

          FUNCS=$(get_block "機能（該当をチェック）" | tr '\n' ',' | sed 's/,$//')
          FUNCS_OTHER=$(get_field "機能（その他の詳細）")
          [ -n "$FUNCS_OTHER" ] && FUNCS="${FUNCS:+$FUNCS, }$FUNCS_OTHER"
          [ -z "$FUNCS" ] && FUNCS="（未記入）"

          PHOTOS_BLOCK=$(get_block "画像（スマホから添付OK）")
          all_urls=$(echo "$PHOTOS_BLOCK" | grep -Eo '!\[[^]]*\]\(([^)]+)\)|https?://[^ )>"]+\.(jpg|jpeg|png|gif|webp)' | sed -E 's/!\[[^]]*\]\(([^)]+)\)/\1/g' || true)
          MAIN_PHOTO=$(echo "$all_urls" | head -n1 || true)
          GALLERY_URLS=$(echo "$all_urls" | tail -n +2 || true)

          COND_SRC=$(get_field "仕入れ")
          COND_STATE=$(get_field "状態")
          COND_NOTE=$(get_block "特記事項")
          COND_LAST=$(get_field "最終整備")
          COND_NEXT=$(get_field "推奨次回OH")
          COMMENT=$(get_block "オーナーコメント（推しポイント）")

          # Video
          if [ -n "$VIDEO" ]; then
            if echo "$VIDEO" | grep -Eqi '\.(mp4|webm)(\?|$)'; then
              VIDEO_MD="<video controls src=\"${VIDEO}\" style=\"max-width:100%;height:auto;border-radius:8px\"></video>"
            else
              VIDEO_MD="[▶ 再生](${VIDEO})"
            fi
          else
            VIDEO_MD="（未投稿）"
          fi

          # Slug/path
          ts=$(date +%s%3N)
          safe () { echo "$1" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g;s/^-+|-+$//g'; }
          bslug=$(safe "$BRAND"); mslug=$(safe "$MODEL"); cslug=$(safe "$CALIBER")
          dir="posts/${bslug}"
          file="${dir}/${bslug}-${mslug}-${cslug}-${ts}.md"
          mkdir -p "$dir"

          # Condition block
          COND_BLOCK=""
          if [ -n "${COND_SRC}${COND_STATE}${COND_NOTE}${COND_LAST}${COND_NEXT}" ]; then
            COND_BLOCK=$(
              printf "## 🔍 Condition\n\n"
              [ -n "$COND_SRC"   ] && printf "- 仕入れ：%s\n"     "$COND_SRC"
              [ -n "$COND_STATE" ] && printf "- 状態：%s\n"       "$COND_STATE"
              [ -n "$COND_NOTE"  ] && printf "- 特記事項：%s\n"   "$COND_NOTE"
              [ -n "$COND_LAST"  ] && printf "- 最終整備：%s\n"   "$COND_LAST"
              [ -n "$COND_NEXT"  ] && printf "- 推奨次回OH：%s\n" "$COND_NEXT"
            )
          fi

          # Gallery grid
          GALLERY_HTML=""
          if [ -n "$GALLERY_URLS" ]; then
            GALLERY_HTML="<div class=\"grid\">"
            while IFS= read -r u; do
              [ -z "$u" ] && continue
              GALLERY_HTML="${GALLERY_HTML}\n  <figure><img src=\"${u}\" alt=\"photo\"></figure>"
            done <<< "$GALLERY_URLS"
            GALLERY_HTML="${GALLERY_HTML}\n</div>"
          else
            GALLERY_HTML="（画像は1枚のみ）"
          fi

          # Owner comment — 音環/18K/裏蓋叩き系との差分が書ける“推しポイント”欄
          [ -z "$COMMENT" ] && COMMENT="Time-O-Voxの魅力は“音環”。約6秒の均質で澄んだ鳴動、裏蓋叩き系とは違う伸びやかな響き。18Kケースが共鳴して音に丸みを与えます。"

          PRICE_LINE="${PRICE_REF:-(参考価格記載なし)}"
          TITLE_FULL="${BRAND} ${MODEL}"

          cat > "$file" <<MD
<style>
  .hero img{width:100%;height:auto;border-radius:10px}
  .badges{display:flex;flex-wrap:wrap;gap:.5rem;margin:.75rem 0}
  .badge{background:#f2f2f2;border-radius:999px;padding:.25rem .6rem;font-size:.85rem}
  .spec{display:grid;grid-template-columns:1fr 1fr;gap:.5rem 1rem;margin:0}
  .spec dt{font-weight:600}
  .spec dd{margin:0 0 .4rem 0}
  .grid{display:grid;grid-template-columns:repeat(3,1fr);gap:.5rem}
  .grid img{width:100%;height:auto;border-radius:8px}
  @media(max-width:720px){.spec{grid-template-columns:1fr} .grid{grid-template-columns:1fr 1fr}}
  .band{background:#fafafa;border:1px solid #eee;border-radius:8px;padding:.75rem;margin:1rem 0}
</style>

# ${TITLE_FULL}

<div class="hero">
${MAIN_PHOTO:+<img src="${MAIN_PHOTO}" alt="${TITLE_FULL}">}
</div>

${CATCH:+**${CATCH}**}

<div class="band">
<strong>参考市場価格：</strong>${PRICE_LINE}
<div class="badges">
  <span class="badge">${MATERIAL}</span>
  <span class="badge">${WINDING:-—}</span>
  <span class="badge">${ERA:-—}</span>
  <span class="badge">${FUNCS}</span>
</div>
</div>

## 📋 スペック
<dl class="spec">
  <dt>ブランド</dt><dd>${BRAND}</dd>
  <dt>モデル</dt><dd>${MODEL}</dd>
  <dt>キャリバー</dt><dd>${CALIBER:-（未記入）}</dd>
  <dt>巻き上げ方式</dt><dd>${WINDING:-（未記入）}</dd>
  <dt>ケース径</dt><dd>${CASE} mm</dd>
  <dt>ラグ幅</dt><dd>${LUG:-—} mm</dd>
  <dt>素材</dt><dd>${MATERIAL}</dd>
  <dt>製造年代</dt><dd>${ERA:-（未記入）}</dd>
  <dt>機能</dt><dd>${FUNCS}</dd>
</dl>

## 📸 ギャラリー
${GALLERY_HTML}

## 🎥 動画
${VIDEO_MD}

${COND_BLOCK:+\n${COND_BLOCK}\n}

## 🗣 オーナーコメント
> ${COMMENT}

---
**さらに詳しい研究ノート →** /blog/
<br><br>
展示者：${OWNER:-匿名}
MD

          # index を先頭更新
          idx="posts/index.md"
          link="- [${TITLE_FULL}](/${file})"
          mkdir -p posts
          if [ -f "$idx" ]; then
            grep -qF "$link" "$idx" || (printf "%s\n\n" "$link" | cat - "$idx" > "$idx.tmp" && mv "$idx.tmp" "$idx")
          else
            printf "# 最新投稿\n\n%s\n" "$link" > "$idx"
          fi

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$file" "$idx"
          git commit -m "post: ${TITLE_FULL}" || true
          git push
